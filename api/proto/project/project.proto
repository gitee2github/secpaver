/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2021. All rights reserved.
 * secPaver is licensed under the Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *     http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
 * PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package project;

service ProjectMgr {
    rpc ListProject(Req) returns (ListProjectAck);
    rpc ImportProject(ImportProjectReq) returns (Ack);
    rpc DeleteProject(Req) returns (Ack);
    rpc InfoProject(Req) returns (InfoProjectAck);
    rpc BuildProject(BuildProjectReq) returns (stream Ack);
    rpc ExportProject(Req) returns (ExportProjectAck);
}

// common request message
message Req {
    string name = 1;
}

// common ack message
message Ack {
    string level = 1;
    string status = 2;
}

// ack message of ListProject rpc
message ListProjectAck {
    message ProjectInfoSimple {
        string name = 1;
        string version = 2;
    }

    repeated ProjectInfoSimple projectInfos = 1;
}

// ack message of InfoProject rpc
message InfoProjectAck {
    MetaInfo metaInfo = 1;
}

// project zip file message
message ProjectZipFile {
    string filename = 1;
    bytes data = 2;
}

// req message of ImportProject rpc
message ImportProjectReq {
    ProjectZipFile file = 1;
    bool Force = 2;
}

// req message of BuildProjectReq rpc
message BuildProjectReq {
    string engine = 1;
    bool remote = 2;
    ProjectInfo project = 3;
    string remoteProject = 4;
}

// ack message of ExportProject rpc
message ExportProjectAck {
    ProjectZipFile file = 1;
}

// project file struct
message ProjectInfo {
    MetaInfo meta = 1;
    ResourceInfo resource = 2;
    repeated SpecInfo specs = 3;
    map<string, bytes> extends = 4;
}

// meta file struct
message MetaInfo {
    string name = 1;
    string version = 2;
    string resources = 3;
    repeated string specs = 4;
    selinuxFile selinux = 5;
}

// selinux engine config file
message selinuxFile {
    string config = 1;
}

// resource file struct
message ResourceInfo {
    repeated Macro macroList = 1;
    repeated Resource resourceList = 2;
    repeated ResGroup groupList = 3;
}

message Resource {
    string type = 1;
    string path = 2;
    map<string, bytes> extends = 3;
}

message Macro {
    string name = 1;
    string value = 2;
}

message ResGroup {
    string name = 1;
    repeated string resources = 2;
}

// spec file struct
message SpecInfo {
    string name = 1;
    repeated Policy applicationList = 2;
}

message Policy {
    Application application = 1;
    repeated Permission permissionList = 2;
}

message Application {
    string path = 1;
    bool isPermissive = 2;
    bool isUnconfined = 3;
}

message Permission {
    string type = 1;
    repeated string resources = 2;
    repeated string actions = 3;
}
