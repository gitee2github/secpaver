// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package project

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// common request message
type Req struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// common ack message
type Ack struct {
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{1}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Ack) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ack message of ListProject rpc
type ListProjectAck struct {
	ProjectInfos         []*ListProjectAck_ProjectInfoSimple `protobuf:"bytes,1,rep,name=projectInfos,proto3" json:"projectInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ListProjectAck) Reset()         { *m = ListProjectAck{} }
func (m *ListProjectAck) String() string { return proto.CompactTextString(m) }
func (*ListProjectAck) ProtoMessage()    {}
func (*ListProjectAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{2}
}

func (m *ListProjectAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectAck.Unmarshal(m, b)
}
func (m *ListProjectAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectAck.Marshal(b, m, deterministic)
}
func (m *ListProjectAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectAck.Merge(m, src)
}
func (m *ListProjectAck) XXX_Size() int {
	return xxx_messageInfo_ListProjectAck.Size(m)
}
func (m *ListProjectAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectAck.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectAck proto.InternalMessageInfo

func (m *ListProjectAck) GetProjectInfos() []*ListProjectAck_ProjectInfoSimple {
	if m != nil {
		return m.ProjectInfos
	}
	return nil
}

type ListProjectAck_ProjectInfoSimple struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectAck_ProjectInfoSimple) Reset()         { *m = ListProjectAck_ProjectInfoSimple{} }
func (m *ListProjectAck_ProjectInfoSimple) String() string { return proto.CompactTextString(m) }
func (*ListProjectAck_ProjectInfoSimple) ProtoMessage()    {}
func (*ListProjectAck_ProjectInfoSimple) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{2, 0}
}

func (m *ListProjectAck_ProjectInfoSimple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectAck_ProjectInfoSimple.Unmarshal(m, b)
}
func (m *ListProjectAck_ProjectInfoSimple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectAck_ProjectInfoSimple.Marshal(b, m, deterministic)
}
func (m *ListProjectAck_ProjectInfoSimple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectAck_ProjectInfoSimple.Merge(m, src)
}
func (m *ListProjectAck_ProjectInfoSimple) XXX_Size() int {
	return xxx_messageInfo_ListProjectAck_ProjectInfoSimple.Size(m)
}
func (m *ListProjectAck_ProjectInfoSimple) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectAck_ProjectInfoSimple.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectAck_ProjectInfoSimple proto.InternalMessageInfo

func (m *ListProjectAck_ProjectInfoSimple) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListProjectAck_ProjectInfoSimple) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// ack message of InfoProject rpc
type InfoProjectAck struct {
	MetaInfo             *MetaInfo `protobuf:"bytes,1,opt,name=metaInfo,proto3" json:"metaInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InfoProjectAck) Reset()         { *m = InfoProjectAck{} }
func (m *InfoProjectAck) String() string { return proto.CompactTextString(m) }
func (*InfoProjectAck) ProtoMessage()    {}
func (*InfoProjectAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{3}
}

func (m *InfoProjectAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoProjectAck.Unmarshal(m, b)
}
func (m *InfoProjectAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoProjectAck.Marshal(b, m, deterministic)
}
func (m *InfoProjectAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoProjectAck.Merge(m, src)
}
func (m *InfoProjectAck) XXX_Size() int {
	return xxx_messageInfo_InfoProjectAck.Size(m)
}
func (m *InfoProjectAck) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoProjectAck.DiscardUnknown(m)
}

var xxx_messageInfo_InfoProjectAck proto.InternalMessageInfo

func (m *InfoProjectAck) GetMetaInfo() *MetaInfo {
	if m != nil {
		return m.MetaInfo
	}
	return nil
}

// project zip file message
type ProjectZipFile struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectZipFile) Reset()         { *m = ProjectZipFile{} }
func (m *ProjectZipFile) String() string { return proto.CompactTextString(m) }
func (*ProjectZipFile) ProtoMessage()    {}
func (*ProjectZipFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{4}
}

func (m *ProjectZipFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectZipFile.Unmarshal(m, b)
}
func (m *ProjectZipFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectZipFile.Marshal(b, m, deterministic)
}
func (m *ProjectZipFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectZipFile.Merge(m, src)
}
func (m *ProjectZipFile) XXX_Size() int {
	return xxx_messageInfo_ProjectZipFile.Size(m)
}
func (m *ProjectZipFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectZipFile.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectZipFile proto.InternalMessageInfo

func (m *ProjectZipFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ProjectZipFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// req message of ImportProject rpc
type ImportProjectReq struct {
	File                 *ProjectZipFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Force                bool            `protobuf:"varint,2,opt,name=Force,proto3" json:"Force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ImportProjectReq) Reset()         { *m = ImportProjectReq{} }
func (m *ImportProjectReq) String() string { return proto.CompactTextString(m) }
func (*ImportProjectReq) ProtoMessage()    {}
func (*ImportProjectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{5}
}

func (m *ImportProjectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportProjectReq.Unmarshal(m, b)
}
func (m *ImportProjectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportProjectReq.Marshal(b, m, deterministic)
}
func (m *ImportProjectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportProjectReq.Merge(m, src)
}
func (m *ImportProjectReq) XXX_Size() int {
	return xxx_messageInfo_ImportProjectReq.Size(m)
}
func (m *ImportProjectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportProjectReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportProjectReq proto.InternalMessageInfo

func (m *ImportProjectReq) GetFile() *ProjectZipFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *ImportProjectReq) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

// req message of BuildProjectReq rpc
type BuildProjectReq struct {
	Engine               string       `protobuf:"bytes,1,opt,name=engine,proto3" json:"engine,omitempty"`
	Remote               bool         `protobuf:"varint,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Project              *ProjectInfo `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	RemoteProject        string       `protobuf:"bytes,4,opt,name=remoteProject,proto3" json:"remoteProject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BuildProjectReq) Reset()         { *m = BuildProjectReq{} }
func (m *BuildProjectReq) String() string { return proto.CompactTextString(m) }
func (*BuildProjectReq) ProtoMessage()    {}
func (*BuildProjectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{6}
}

func (m *BuildProjectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildProjectReq.Unmarshal(m, b)
}
func (m *BuildProjectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildProjectReq.Marshal(b, m, deterministic)
}
func (m *BuildProjectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildProjectReq.Merge(m, src)
}
func (m *BuildProjectReq) XXX_Size() int {
	return xxx_messageInfo_BuildProjectReq.Size(m)
}
func (m *BuildProjectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildProjectReq.DiscardUnknown(m)
}

var xxx_messageInfo_BuildProjectReq proto.InternalMessageInfo

func (m *BuildProjectReq) GetEngine() string {
	if m != nil {
		return m.Engine
	}
	return ""
}

func (m *BuildProjectReq) GetRemote() bool {
	if m != nil {
		return m.Remote
	}
	return false
}

func (m *BuildProjectReq) GetProject() *ProjectInfo {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *BuildProjectReq) GetRemoteProject() string {
	if m != nil {
		return m.RemoteProject
	}
	return ""
}

// ack message of ExportProject rpc
type ExportProjectAck struct {
	File                 *ProjectZipFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExportProjectAck) Reset()         { *m = ExportProjectAck{} }
func (m *ExportProjectAck) String() string { return proto.CompactTextString(m) }
func (*ExportProjectAck) ProtoMessage()    {}
func (*ExportProjectAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{7}
}

func (m *ExportProjectAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportProjectAck.Unmarshal(m, b)
}
func (m *ExportProjectAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportProjectAck.Marshal(b, m, deterministic)
}
func (m *ExportProjectAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportProjectAck.Merge(m, src)
}
func (m *ExportProjectAck) XXX_Size() int {
	return xxx_messageInfo_ExportProjectAck.Size(m)
}
func (m *ExportProjectAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportProjectAck.DiscardUnknown(m)
}

var xxx_messageInfo_ExportProjectAck proto.InternalMessageInfo

func (m *ExportProjectAck) GetFile() *ProjectZipFile {
	if m != nil {
		return m.File
	}
	return nil
}

// project file struct
type ProjectInfo struct {
	Meta                 *MetaInfo         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Resource             *ResourceInfo     `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Specs                []*SpecInfo       `protobuf:"bytes,3,rep,name=specs,proto3" json:"specs,omitempty"`
	Extends              map[string][]byte `protobuf:"bytes,4,rep,name=extends,proto3" json:"extends,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProjectInfo) Reset()         { *m = ProjectInfo{} }
func (m *ProjectInfo) String() string { return proto.CompactTextString(m) }
func (*ProjectInfo) ProtoMessage()    {}
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{8}
}

func (m *ProjectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectInfo.Unmarshal(m, b)
}
func (m *ProjectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectInfo.Marshal(b, m, deterministic)
}
func (m *ProjectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectInfo.Merge(m, src)
}
func (m *ProjectInfo) XXX_Size() int {
	return xxx_messageInfo_ProjectInfo.Size(m)
}
func (m *ProjectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectInfo proto.InternalMessageInfo

func (m *ProjectInfo) GetMeta() *MetaInfo {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProjectInfo) GetResource() *ResourceInfo {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ProjectInfo) GetSpecs() []*SpecInfo {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *ProjectInfo) GetExtends() map[string][]byte {
	if m != nil {
		return m.Extends
	}
	return nil
}

// meta file struct
type MetaInfo struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string       `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Resources            string       `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	Specs                []string     `protobuf:"bytes,4,rep,name=specs,proto3" json:"specs,omitempty"`
	Selinux              *SelinuxFile `protobuf:"bytes,5,opt,name=selinux,proto3" json:"selinux,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MetaInfo) Reset()         { *m = MetaInfo{} }
func (m *MetaInfo) String() string { return proto.CompactTextString(m) }
func (*MetaInfo) ProtoMessage()    {}
func (*MetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{9}
}

func (m *MetaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaInfo.Unmarshal(m, b)
}
func (m *MetaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaInfo.Marshal(b, m, deterministic)
}
func (m *MetaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaInfo.Merge(m, src)
}
func (m *MetaInfo) XXX_Size() int {
	return xxx_messageInfo_MetaInfo.Size(m)
}
func (m *MetaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MetaInfo proto.InternalMessageInfo

func (m *MetaInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetaInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MetaInfo) GetResources() string {
	if m != nil {
		return m.Resources
	}
	return ""
}

func (m *MetaInfo) GetSpecs() []string {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *MetaInfo) GetSelinux() *SelinuxFile {
	if m != nil {
		return m.Selinux
	}
	return nil
}

// selinux engine config file
type SelinuxFile struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelinuxFile) Reset()         { *m = SelinuxFile{} }
func (m *SelinuxFile) String() string { return proto.CompactTextString(m) }
func (*SelinuxFile) ProtoMessage()    {}
func (*SelinuxFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{10}
}

func (m *SelinuxFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelinuxFile.Unmarshal(m, b)
}
func (m *SelinuxFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelinuxFile.Marshal(b, m, deterministic)
}
func (m *SelinuxFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelinuxFile.Merge(m, src)
}
func (m *SelinuxFile) XXX_Size() int {
	return xxx_messageInfo_SelinuxFile.Size(m)
}
func (m *SelinuxFile) XXX_DiscardUnknown() {
	xxx_messageInfo_SelinuxFile.DiscardUnknown(m)
}

var xxx_messageInfo_SelinuxFile proto.InternalMessageInfo

func (m *SelinuxFile) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

// resource file struct
type ResourceInfo struct {
	MacroList            []*Macro    `protobuf:"bytes,1,rep,name=macroList,proto3" json:"macroList,omitempty"`
	ResourceList         []*Resource `protobuf:"bytes,2,rep,name=resourceList,proto3" json:"resourceList,omitempty"`
	GroupList            []*ResGroup `protobuf:"bytes,3,rep,name=groupList,proto3" json:"groupList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResourceInfo) Reset()         { *m = ResourceInfo{} }
func (m *ResourceInfo) String() string { return proto.CompactTextString(m) }
func (*ResourceInfo) ProtoMessage()    {}
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{11}
}

func (m *ResourceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceInfo.Unmarshal(m, b)
}
func (m *ResourceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceInfo.Marshal(b, m, deterministic)
}
func (m *ResourceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceInfo.Merge(m, src)
}
func (m *ResourceInfo) XXX_Size() int {
	return xxx_messageInfo_ResourceInfo.Size(m)
}
func (m *ResourceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceInfo proto.InternalMessageInfo

func (m *ResourceInfo) GetMacroList() []*Macro {
	if m != nil {
		return m.MacroList
	}
	return nil
}

func (m *ResourceInfo) GetResourceList() []*Resource {
	if m != nil {
		return m.ResourceList
	}
	return nil
}

func (m *ResourceInfo) GetGroupList() []*ResGroup {
	if m != nil {
		return m.GroupList
	}
	return nil
}

type Resource struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Path                 string            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Extends              map[string][]byte `protobuf:"bytes,3,rep,name=extends,proto3" json:"extends,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{12}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Resource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Resource) GetExtends() map[string][]byte {
	if m != nil {
		return m.Extends
	}
	return nil
}

type Macro struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Macro) Reset()         { *m = Macro{} }
func (m *Macro) String() string { return proto.CompactTextString(m) }
func (*Macro) ProtoMessage()    {}
func (*Macro) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{13}
}

func (m *Macro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Macro.Unmarshal(m, b)
}
func (m *Macro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Macro.Marshal(b, m, deterministic)
}
func (m *Macro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Macro.Merge(m, src)
}
func (m *Macro) XXX_Size() int {
	return xxx_messageInfo_Macro.Size(m)
}
func (m *Macro) XXX_DiscardUnknown() {
	xxx_messageInfo_Macro.DiscardUnknown(m)
}

var xxx_messageInfo_Macro proto.InternalMessageInfo

func (m *Macro) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Macro) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ResGroup struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Resources            []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResGroup) Reset()         { *m = ResGroup{} }
func (m *ResGroup) String() string { return proto.CompactTextString(m) }
func (*ResGroup) ProtoMessage()    {}
func (*ResGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{14}
}

func (m *ResGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResGroup.Unmarshal(m, b)
}
func (m *ResGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResGroup.Marshal(b, m, deterministic)
}
func (m *ResGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResGroup.Merge(m, src)
}
func (m *ResGroup) XXX_Size() int {
	return xxx_messageInfo_ResGroup.Size(m)
}
func (m *ResGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResGroup proto.InternalMessageInfo

func (m *ResGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResGroup) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

// spec file struct
type SpecInfo struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ApplicationList      []*Policy `protobuf:"bytes,2,rep,name=applicationList,proto3" json:"applicationList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SpecInfo) Reset()         { *m = SpecInfo{} }
func (m *SpecInfo) String() string { return proto.CompactTextString(m) }
func (*SpecInfo) ProtoMessage()    {}
func (*SpecInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{15}
}

func (m *SpecInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecInfo.Unmarshal(m, b)
}
func (m *SpecInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecInfo.Marshal(b, m, deterministic)
}
func (m *SpecInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecInfo.Merge(m, src)
}
func (m *SpecInfo) XXX_Size() int {
	return xxx_messageInfo_SpecInfo.Size(m)
}
func (m *SpecInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SpecInfo proto.InternalMessageInfo

func (m *SpecInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SpecInfo) GetApplicationList() []*Policy {
	if m != nil {
		return m.ApplicationList
	}
	return nil
}

type Policy struct {
	Application          *Application  `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	PermissionList       []*Permission `protobuf:"bytes,2,rep,name=permissionList,proto3" json:"permissionList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{16}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetApplication() *Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Policy) GetPermissionList() []*Permission {
	if m != nil {
		return m.PermissionList
	}
	return nil
}

type Application struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsPermissive         bool     `protobuf:"varint,2,opt,name=isPermissive,proto3" json:"isPermissive,omitempty"`
	IsUnconfined         bool     `protobuf:"varint,3,opt,name=isUnconfined,proto3" json:"isUnconfined,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{17}
}

func (m *Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application.Unmarshal(m, b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application.Marshal(b, m, deterministic)
}
func (m *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(m, src)
}
func (m *Application) XXX_Size() int {
	return xxx_messageInfo_Application.Size(m)
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

func (m *Application) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Application) GetIsPermissive() bool {
	if m != nil {
		return m.IsPermissive
	}
	return false
}

func (m *Application) GetIsUnconfined() bool {
	if m != nil {
		return m.IsUnconfined
	}
	return false
}

type Permission struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Resources            []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions              []string `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{18}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Permission) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Permission) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func init() {
	proto.RegisterType((*Req)(nil), "project.Req")
	proto.RegisterType((*Ack)(nil), "project.Ack")
	proto.RegisterType((*ListProjectAck)(nil), "project.ListProjectAck")
	proto.RegisterType((*ListProjectAck_ProjectInfoSimple)(nil), "project.ListProjectAck.ProjectInfoSimple")
	proto.RegisterType((*InfoProjectAck)(nil), "project.InfoProjectAck")
	proto.RegisterType((*ProjectZipFile)(nil), "project.ProjectZipFile")
	proto.RegisterType((*ImportProjectReq)(nil), "project.ImportProjectReq")
	proto.RegisterType((*BuildProjectReq)(nil), "project.BuildProjectReq")
	proto.RegisterType((*ExportProjectAck)(nil), "project.ExportProjectAck")
	proto.RegisterType((*ProjectInfo)(nil), "project.ProjectInfo")
	proto.RegisterMapType((map[string][]byte)(nil), "project.ProjectInfo.ExtendsEntry")
	proto.RegisterType((*MetaInfo)(nil), "project.MetaInfo")
	proto.RegisterType((*SelinuxFile)(nil), "project.selinuxFile")
	proto.RegisterType((*ResourceInfo)(nil), "project.ResourceInfo")
	proto.RegisterType((*Resource)(nil), "project.Resource")
	proto.RegisterMapType((map[string][]byte)(nil), "project.Resource.ExtendsEntry")
	proto.RegisterType((*Macro)(nil), "project.Macro")
	proto.RegisterType((*ResGroup)(nil), "project.ResGroup")
	proto.RegisterType((*SpecInfo)(nil), "project.SpecInfo")
	proto.RegisterType((*Policy)(nil), "project.Policy")
	proto.RegisterType((*Application)(nil), "project.Application")
	proto.RegisterType((*Permission)(nil), "project.Permission")
}

func init() { proto.RegisterFile("project.proto", fileDescriptor_8340e6318dfdfac2) }

var fileDescriptor_8340e6318dfdfac2 = []byte{
	// 868 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcf, 0x6e, 0xf3, 0x44,
	0x10, 0x97, 0xf3, 0xdf, 0x63, 0x27, 0xed, 0xb7, 0x7c, 0xb4, 0x6e, 0x84, 0x50, 0x59, 0x51, 0x51,
	0x04, 0x04, 0x9a, 0x16, 0x14, 0x5a, 0xa4, 0x52, 0x44, 0x8b, 0x2a, 0x51, 0xa9, 0xda, 0xaa, 0x12,
	0x70, 0x33, 0xce, 0x36, 0x2c, 0x75, 0x6c, 0xd7, 0x76, 0xa2, 0xe6, 0xc0, 0x03, 0xf0, 0x04, 0x5c,
	0x38, 0x21, 0x0e, 0xbc, 0x0f, 0x2f, 0x84, 0x76, 0xbd, 0xeb, 0x5d, 0xbb, 0x29, 0x52, 0x0f, 0xdf,
	0xcd, 0x33, 0xf3, 0x9b, 0x99, 0xdf, 0xec, 0xcc, 0xee, 0x18, 0xfa, 0x49, 0x1a, 0xff, 0x4a, 0x83,
	0x7c, 0x94, 0xa4, 0x71, 0x1e, 0xa3, 0xae, 0x14, 0xf1, 0x0e, 0x34, 0x09, 0x7d, 0x40, 0x08, 0x5a,
	0x91, 0x3f, 0xa7, 0x9e, 0xb5, 0x6b, 0xed, 0xdb, 0x44, 0x7c, 0xe3, 0x43, 0x68, 0x9e, 0x05, 0xf7,
	0xe8, 0x35, 0xb4, 0x43, 0xba, 0xa4, 0xa1, 0xb4, 0x15, 0x02, 0xda, 0x82, 0x4e, 0x96, 0xfb, 0xf9,
	0x22, 0xf3, 0x1a, 0x42, 0x2d, 0x25, 0xfc, 0x97, 0x05, 0x83, 0xef, 0x59, 0x96, 0x5f, 0x17, 0xf1,
	0x79, 0x80, 0x2b, 0x70, 0x65, 0xb6, 0xcb, 0xe8, 0x2e, 0xce, 0x3c, 0x6b, 0xb7, 0xb9, 0xef, 0x8c,
	0x3f, 0x1c, 0x29, 0x46, 0x55, 0xf8, 0xe8, 0x5a, 0x63, 0x6f, 0xd8, 0x3c, 0x09, 0x29, 0xa9, 0xb8,
	0x0f, 0xcf, 0xe0, 0xd5, 0x13, 0xc8, 0x3a, 0xfe, 0xc8, 0x83, 0xee, 0x92, 0xa6, 0x19, 0x8b, 0x23,
	0xc9, 0x51, 0x89, 0xf8, 0x14, 0x06, 0xdc, 0xd7, 0xe0, 0xf8, 0x09, 0xf4, 0xe6, 0x34, 0xf7, 0xb9,
	0x56, 0xc4, 0x70, 0xc6, 0xaf, 0x4a, 0x7e, 0x57, 0xd2, 0x40, 0x4a, 0x08, 0xfe, 0x1a, 0x06, 0xd2,
	0xf9, 0x27, 0x96, 0x5c, 0xb0, 0x90, 0xa2, 0x21, 0xf4, 0xee, 0x58, 0x48, 0x0d, 0x12, 0xa5, 0xcc,
	0xc9, 0x4d, 0xfd, 0xdc, 0x17, 0x2c, 0x5c, 0x22, 0xbe, 0xf1, 0x2d, 0x6c, 0x5e, 0xce, 0x93, 0x38,
	0x55, 0x95, 0xf3, 0x26, 0x7c, 0x04, 0x2d, 0xee, 0x23, 0x09, 0x6c, 0x97, 0x04, 0xaa, 0xa9, 0x88,
	0x00, 0xf1, 0xb6, 0x5c, 0xc4, 0x69, 0x40, 0x45, 0xd4, 0x1e, 0x29, 0x04, 0xfc, 0x87, 0x05, 0x1b,
	0xdf, 0x2c, 0x58, 0x38, 0x35, 0xc2, 0x6e, 0x41, 0x87, 0x46, 0x33, 0x16, 0x29, 0x62, 0x52, 0xe2,
	0xfa, 0x94, 0xce, 0xe3, 0x5c, 0x85, 0x90, 0x12, 0x1a, 0x81, 0x9a, 0x0e, 0xaf, 0x29, 0x98, 0xbc,
	0xae, 0x33, 0x11, 0xa7, 0xa1, 0x40, 0xe8, 0x7d, 0xe8, 0x17, 0x9e, 0xd2, 0xea, 0xb5, 0x44, 0x9a,
	0xaa, 0x12, 0x9f, 0xc2, 0xe6, 0xf9, 0xa3, 0x51, 0x30, 0x3f, 0xf5, 0x97, 0x14, 0x8c, 0x7f, 0x6f,
	0x80, 0x63, 0xe4, 0x47, 0x7b, 0xd0, 0xe2, 0xfd, 0x78, 0xbe, 0x5d, 0xc2, 0x8c, 0x0e, 0xa0, 0x97,
	0xd2, 0x2c, 0x5e, 0xa8, 0xa3, 0x72, 0xc6, 0x6f, 0x97, 0x50, 0x22, 0x0d, 0x45, 0x77, 0x15, 0x0c,
	0x7d, 0x00, 0xed, 0x2c, 0xa1, 0x41, 0xe6, 0x35, 0xc5, 0xa4, 0xea, 0xd0, 0x37, 0x09, 0x0d, 0x04,
	0xb6, 0xb0, 0xa3, 0x13, 0xe8, 0xd2, 0xc7, 0x9c, 0x46, 0xd3, 0xcc, 0x6b, 0x09, 0xe8, 0x7b, 0xeb,
	0x4e, 0x6a, 0x74, 0x5e, 0x60, 0xce, 0xa3, 0x3c, 0x5d, 0x11, 0xe5, 0x31, 0x3c, 0x06, 0xd7, 0x34,
	0xa0, 0x4d, 0x68, 0xde, 0xd3, 0x95, 0xec, 0x11, 0xff, 0xe4, 0x2d, 0x5e, 0xfa, 0xe1, 0x82, 0xca,
	0xc1, 0x29, 0x84, 0xe3, 0xc6, 0xc4, 0xc2, 0x7f, 0x5a, 0xd0, 0x53, 0x75, 0xbe, 0x6c, 0xf6, 0xd1,
	0x3b, 0x60, 0xab, 0x42, 0x33, 0xd1, 0x5f, 0x9b, 0x68, 0x05, 0x4f, 0x59, 0x94, 0xce, 0xeb, 0xb1,
	0x55, 0x9d, 0x23, 0xe8, 0x66, 0x34, 0x64, 0xd1, 0xe2, 0xd1, 0x6b, 0xd7, 0x26, 0x42, 0xea, 0x45,
	0x9f, 0x14, 0x08, 0xef, 0x81, 0x63, 0xe8, 0xf9, 0xa0, 0x05, 0x71, 0x74, 0xc7, 0x66, 0x6a, 0x00,
	0x0b, 0x09, 0xff, 0x6d, 0x81, 0x6b, 0xb6, 0x00, 0x7d, 0x0c, 0xf6, 0xdc, 0x0f, 0xd2, 0x98, 0xbf,
	0x08, 0xf2, 0x99, 0x18, 0xe8, 0xbe, 0x72, 0x0b, 0xd1, 0x00, 0xf4, 0x39, 0xb8, 0x8a, 0xb8, 0x70,
	0x68, 0xd4, 0xba, 0xa5, 0x42, 0x93, 0x0a, 0x0c, 0x7d, 0x0a, 0xf6, 0x2c, 0x8d, 0x17, 0x89, 0xf0,
	0x69, 0x3e, 0xf5, 0xf9, 0x8e, 0x1b, 0x89, 0xc6, 0xe0, 0x7f, 0x2c, 0xe8, 0xa9, 0x58, 0xfc, 0xb0,
	0xf3, 0x55, 0x52, 0x1e, 0x36, 0xff, 0xe6, 0xba, 0xc4, 0xcf, 0x7f, 0x91, 0x27, 0x2d, 0xbe, 0xd1,
	0x44, 0x8f, 0x46, 0x91, 0xe3, 0xdd, 0x27, 0xbc, 0xde, 0xc0, 0x5c, 0x1c, 0x40, 0x5b, 0x1c, 0xd3,
	0xda, 0x99, 0xa8, 0xb8, 0xd9, 0xd2, 0x0d, 0x7f, 0x25, 0x8a, 0x13, 0x45, 0xaf, 0xf5, 0xaa, 0xcc,
	0x4b, 0x43, 0x4c, 0x85, 0x56, 0xe0, 0x1f, 0xa1, 0xa7, 0x2e, 0xc5, 0x5a, 0xef, 0x2f, 0x61, 0xc3,
	0x4f, 0x92, 0x90, 0x05, 0x7e, 0xce, 0xe2, 0xc8, 0x68, 0xd3, 0x86, 0xbe, 0x29, 0x71, 0xc8, 0x82,
	0x15, 0xa9, 0xe3, 0xf0, 0x6f, 0xd0, 0x29, 0x4c, 0xe8, 0x0b, 0x70, 0x0c, 0xa3, 0xbc, 0xf0, 0x7a,
	0x04, 0xcf, 0xb4, 0x8d, 0x98, 0x40, 0x74, 0x02, 0x83, 0x84, 0xa6, 0x73, 0x96, 0x65, 0xd5, 0xdc,
	0x6f, 0xe9, 0xdc, 0xa5, 0x99, 0xd4, 0xa0, 0x98, 0x81, 0x63, 0x04, 0x2e, 0x7b, 0x6c, 0x19, 0x3d,
	0xc6, 0xe0, 0xb2, 0x4c, 0x85, 0x58, 0xaa, 0x67, 0xb4, 0xa2, 0x2b, 0x30, 0xb7, 0x91, 0x98, 0xf8,
	0x88, 0x4e, 0xc5, 0x8d, 0x13, 0x18, 0xad, 0xc3, 0x3f, 0x00, 0x68, 0x22, 0x6b, 0x27, 0xec, 0x7f,
	0x9b, 0xc0, 0x2f, 0xbb, 0x1f, 0x70, 0x96, 0xc5, 0xac, 0xd9, 0x44, 0x89, 0xe3, 0x7f, 0x1b, 0x00,
	0xf2, 0x25, 0xba, 0x9a, 0xa5, 0xe8, 0x08, 0x1c, 0x63, 0xd9, 0x22, 0xd7, 0x18, 0xc9, 0x87, 0xe1,
	0xf6, 0x33, 0x0b, 0x19, 0x4d, 0xa0, 0x5f, 0x59, 0x55, 0x68, 0xa7, 0x44, 0xd6, 0x57, 0xd8, 0x50,
	0x87, 0x2c, 0xde, 0xf7, 0xfe, 0xb7, 0x34, 0xa4, 0xe5, 0x12, 0xa8, 0x65, 0xac, 0x82, 0x8f, 0xc0,
	0x31, 0x96, 0xf2, 0xb3, 0xe4, 0x6a, 0x8b, 0x7b, 0x02, 0xae, 0xb9, 0xef, 0x90, 0x57, 0x02, 0x6b,
	0x6b, 0xb0, 0x9a, 0xed, 0x33, 0x8b, 0x97, 0x55, 0x59, 0x48, 0xb5, 0x8c, 0xba, 0xc8, 0xfa, 0xda,
	0xfa, 0xb9, 0x23, 0xfe, 0xa1, 0x0e, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xe0, 0x44, 0x08,
	0x54, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectMgrClient is the client API for ProjectMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectMgrClient interface {
	ListProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*ListProjectAck, error)
	ImportProject(ctx context.Context, in *ImportProjectReq, opts ...grpc.CallOption) (*Ack, error)
	DeleteProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Ack, error)
	InfoProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*InfoProjectAck, error)
	BuildProject(ctx context.Context, in *BuildProjectReq, opts ...grpc.CallOption) (ProjectMgr_BuildProjectClient, error)
	ExportProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*ExportProjectAck, error)
}

type projectMgrClient struct {
	cc *grpc.ClientConn
}

func NewProjectMgrClient(cc *grpc.ClientConn) ProjectMgrClient {
	return &projectMgrClient{cc}
}

func (c *projectMgrClient) ListProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*ListProjectAck, error) {
	out := new(ListProjectAck)
	err := c.cc.Invoke(ctx, "/project.ProjectMgr/ListProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectMgrClient) ImportProject(ctx context.Context, in *ImportProjectReq, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/project.ProjectMgr/ImportProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectMgrClient) DeleteProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Ack, error) {
	out := new(Ack)
	err := c.cc.Invoke(ctx, "/project.ProjectMgr/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectMgrClient) InfoProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*InfoProjectAck, error) {
	out := new(InfoProjectAck)
	err := c.cc.Invoke(ctx, "/project.ProjectMgr/InfoProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectMgrClient) BuildProject(ctx context.Context, in *BuildProjectReq, opts ...grpc.CallOption) (ProjectMgr_BuildProjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProjectMgr_serviceDesc.Streams[0], "/project.ProjectMgr/BuildProject", opts...)
	if err != nil {
		return nil, err
	}
	x := &projectMgrBuildProjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProjectMgr_BuildProjectClient interface {
	Recv() (*Ack, error)
	grpc.ClientStream
}

type projectMgrBuildProjectClient struct {
	grpc.ClientStream
}

func (x *projectMgrBuildProjectClient) Recv() (*Ack, error) {
	m := new(Ack)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *projectMgrClient) ExportProject(ctx context.Context, in *Req, opts ...grpc.CallOption) (*ExportProjectAck, error) {
	out := new(ExportProjectAck)
	err := c.cc.Invoke(ctx, "/project.ProjectMgr/ExportProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectMgrServer is the server API for ProjectMgr service.
type ProjectMgrServer interface {
	ListProject(context.Context, *Req) (*ListProjectAck, error)
	ImportProject(context.Context, *ImportProjectReq) (*Ack, error)
	DeleteProject(context.Context, *Req) (*Ack, error)
	InfoProject(context.Context, *Req) (*InfoProjectAck, error)
	BuildProject(*BuildProjectReq, ProjectMgr_BuildProjectServer) error
	ExportProject(context.Context, *Req) (*ExportProjectAck, error)
}

// UnimplementedProjectMgrServer can be embedded to have forward compatible implementations.
type UnimplementedProjectMgrServer struct {
}

func (*UnimplementedProjectMgrServer) ListProject(ctx context.Context, req *Req) (*ListProjectAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProject not implemented")
}
func (*UnimplementedProjectMgrServer) ImportProject(ctx context.Context, req *ImportProjectReq) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportProject not implemented")
}
func (*UnimplementedProjectMgrServer) DeleteProject(ctx context.Context, req *Req) (*Ack, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedProjectMgrServer) InfoProject(ctx context.Context, req *Req) (*InfoProjectAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InfoProject not implemented")
}
func (*UnimplementedProjectMgrServer) BuildProject(req *BuildProjectReq, srv ProjectMgr_BuildProjectServer) error {
	return status.Errorf(codes.Unimplemented, "method BuildProject not implemented")
}
func (*UnimplementedProjectMgrServer) ExportProject(ctx context.Context, req *Req) (*ExportProjectAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportProject not implemented")
}

func RegisterProjectMgrServer(s *grpc.Server, srv ProjectMgrServer) {
	s.RegisterService(&_ProjectMgr_serviceDesc, srv)
}

func _ProjectMgr_ListProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMgrServer).ListProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectMgr/ListProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMgrServer).ListProject(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectMgr_ImportProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportProjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMgrServer).ImportProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectMgr/ImportProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMgrServer).ImportProject(ctx, req.(*ImportProjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectMgr_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMgrServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectMgr/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMgrServer).DeleteProject(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectMgr_InfoProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMgrServer).InfoProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectMgr/InfoProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMgrServer).InfoProject(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectMgr_BuildProject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BuildProjectReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProjectMgrServer).BuildProject(m, &projectMgrBuildProjectServer{stream})
}

type ProjectMgr_BuildProjectServer interface {
	Send(*Ack) error
	grpc.ServerStream
}

type projectMgrBuildProjectServer struct {
	grpc.ServerStream
}

func (x *projectMgrBuildProjectServer) Send(m *Ack) error {
	return x.ServerStream.SendMsg(m)
}

func _ProjectMgr_ExportProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMgrServer).ExportProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.ProjectMgr/ExportProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMgrServer).ExportProject(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.ProjectMgr",
	HandlerType: (*ProjectMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProject",
			Handler:    _ProjectMgr_ListProject_Handler,
		},
		{
			MethodName: "ImportProject",
			Handler:    _ProjectMgr_ImportProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ProjectMgr_DeleteProject_Handler,
		},
		{
			MethodName: "InfoProject",
			Handler:    _ProjectMgr_InfoProject_Handler,
		},
		{
			MethodName: "ExportProject",
			Handler:    _ProjectMgr_ExportProject_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BuildProject",
			Handler:       _ProjectMgr_BuildProject_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "project.proto",
}
